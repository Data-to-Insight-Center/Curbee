package org.seadva.registry.database.model.dao.vaRegistry.impl;

import org.seadva.registry.database.common.DBConnectionPool;
import org.seadva.registry.database.common.ObjectPool;
import org.seadva.registry.database.model.dao.vaRegistry.ProfileTypeDao;
import org.seadva.registry.database.model.obj.vaRegistry.ProfileType;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;


/**
 * DAO for table: ProfileType.
 * @author autogenerated
 */

public class ProfileTypeDaoImpl implements ProfileTypeDao {

    protected Connection getConnection() throws SQLException {
        return connectionPool.getEntry();
    }
    public ProfileTypeDaoImpl(){
        connectionPool = DBConnectionPool.getInstance();
    }
    protected ObjectPool<Connection> connectionPool = null;

    @Override
    public ProfileType getProfileType(String element) {
        ProfileType profile_type = new ProfileType();
        Connection connection = null;
        PreparedStatement statement = null;

        try {
            connection = getConnection();

             statement = connection.prepareStatement("Select * from profile_type where profile_type_name=?");
            statement.setString(1, element);
            ResultSet resultSet = statement.executeQuery();

            while (resultSet.next()) {
                profile_type.setId(resultSet.getString("profile_type_id"));
                profile_type.setProfileTypeName(resultSet.getString("profile_type_name"));
                profile_type.setProfileTypeSchema(resultSet.getString("profile_type_schema"));
                break;
            }


        } catch (SQLException sqle) {
            throw new RuntimeException(sqle);
        } finally {
            if (statement != null) {
                try {
                    statement.close();
                } catch (SQLException e) {
                    //  log.warn("Unable to close statement", e);
                }
                statement = null;
            }
            connectionPool.releaseEntry(connection);

        }
        return profile_type;
    }
}

