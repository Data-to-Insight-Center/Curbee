package org.seadva.registry.database.model.obj.vaRegistry;

import com.google.gson.annotations.Expose;
import org.seadva.registry.database.model.obj.vaRegistry.iface.IMetadataType;

import java.util.HashSet;
import java.util.Set;


/** 
 * Object mapping for hibernate-handled table: metadata_type.
 * @author autogenerated
 */

public class MetadataType implements IMetadataType {

	/** Field mapping. */
    @Expose
	private String id;
	/** Field mapping. */
	private Set<MetadataReference> metadataReferences = new HashSet<MetadataReference>();

	/** Field mapping. */
    @Expose
	private String metadataElement;
	/** Field mapping. */
    @Expose
	private String metadataSchema;
	/** Field mapping. */
	private Set<Property> properties = new HashSet<Property>();

	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public MetadataType() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public MetadataType(String id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param id String object;
	 * @param metadataElement String object;
	 * @param metadataSchema String object;
	 */
	public MetadataType(String id, String metadataElement, String metadataSchema) {

		this.id = id;
		this.metadataElement = metadataElement;
		this.metadataSchema = metadataSchema;
	}
	
 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/

	public Class<?> getClassType() {
		return MetadataType.class;
	}
 

    /**
     * Return the value associated with the column: id.
	 * @return A String object (this.id)
	 */
	public String getId() {
		return this.id;
		
	}
	

  
    /**  
     * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final String id) {
		// If we've just been persisted and hashCode has been
		// returned then make sure other entities with this
		// ID return the already returned hash code
		this.id = id;
	}

    /**
     * Return the value associated with the column: metadataReference.
	 * @return A Set&lt;MetadataReference&gt; object (this.metadataReference)
	 */

	public Set<MetadataReference> getMetadataReferences() {
		return this.metadataReferences;
		
	}
	
	/**
	 * Adds a bi-directional link of type MetadataReference to the metadataReferences set.
	 * @param metadataReference item to add
	 */
	public void addMetadataReference(MetadataReference metadataReference) {
		metadataReference.setMetadata(this);
		this.metadataReferences.add(metadataReference);
	}

  
    /**  
     * Set the value related to the column: metadataReference.
	 * @param metadataReference the metadataReference value you wish to set
	 */
	public void setMetadataReferences(final Set<MetadataReference> metadataReference) {
		this.metadataReferences = metadataReference;
	}

    /**
     * Return the value associated with the column: metadataElement.
	 * @return A String object (this.metadataElement)
	 */

	public String getMetadataElement() {
		return this.metadataElement;
		
	}
	

  
    /**  
     * Set the value related to the column: metadataElement.
	 * @param metadataElement the metadataElement value you wish to set
	 */
	public void setMetadataElement(final String metadataElement) {
		this.metadataElement = metadataElement;
	}

    /**
     * Return the value associated with the column: metadataSchema.
	 * @return A String object (this.metadataSchema)
	 */
	public String getMetadataSchema() {
		return this.metadataSchema;
		
	}
	

  
    /**  
     * Set the value related to the column: metadataSchema.
	 * @param metadataSchema the metadataSchema value you wish to set
	 */
	public void setMetadataSchema(final String metadataSchema) {
		this.metadataSchema = metadataSchema;
	}

    /**
     * Return the value associated with the column: property.
	 * @return A Set&lt;Property&gt; object (this.property)
	 */

	public Set<Property> getProperties() {
		return this.properties;
		
	}
	
	/**
	 * Adds a bi-directional link of type Property to the properties set.
	 * @param property item to add
	 */
	public void addProperty(Property property) {
		property.setMetadata(this);
		this.properties.add(property);
	}

  
    /**  
     * Set the value related to the column: property.
	 * @param property the property value you wish to set
	 */
	public void setProperties(final Set<Property> property) {
		this.properties = property;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public MetadataType clone() throws CloneNotSupportedException {
		
        final MetadataType copy = (MetadataType)super.clone();

		copy.setId(this.getId());
		if (this.getMetadataReferences() != null) {
			copy.getMetadataReferences().addAll(this.getMetadataReferences());
		}
		copy.setMetadataElement(this.getMetadataElement());
		copy.setMetadataSchema(this.getMetadataSchema());
		if (this.getProperties() != null) {
			copy.getProperties().addAll(this.getProperties());
		}
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("id: " + this.getId() + ", ");
		sb.append("metadataElement: " + this.getMetadataElement() + ", ");
		sb.append("metadataSchema: " + this.getMetadataSchema() + ", ");
		return sb.toString();		
	}
}