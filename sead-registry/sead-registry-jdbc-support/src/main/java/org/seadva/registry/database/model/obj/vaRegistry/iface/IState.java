package org.seadva.registry.database.model.obj.vaRegistry.iface;
import java.util.Set;
import javax.persistence.Basic;
import org.seadva.registry.database.model.obj.vaRegistry.Collection;
import org.seadva.registry.database.model.obj.vaRegistry.Transition;
import org.seadva.registry.database.model.obj.vaRegistry.iface.IBaseEntity;


/** 
 * Object interface mapping for hibernate-handled table: state.
 * @author autogenerated
 */

public interface IState extends IBaseEntity {



    /**
     * Return the value associated with the column: collection.
	 * @return A Set&lt;Collection&gt; object (this.collection)
	 */
	Set<Collection> getCollections();
	
	/**
	 * Adds a bi-directional link of type Collection to the collections set.
	 * @param collection item to add
	 */
	void addCollection(Collection collection);

  
    /**  
     * Set the value related to the column: collection.
	 * @param collection the collection value you wish to set
	 */
	void setCollections(final Set<Collection> collection);

    /**
     * Return the value associated with the column: stateName.
	 * @return A String object (this.stateName)
	 */
	String getStateName();
	

  
    /**  
     * Set the value related to the column: stateName.
	 * @param stateName the stateName value you wish to set
	 */
	void setStateName(final String stateName);

    /**
     * Return the value associated with the column: stateType.
	 * @return A String object (this.stateType)
	 */
	String getStateType();
	

  
    /**  
     * Set the value related to the column: stateType.
	 * @param stateType the stateType value you wish to set
	 */
	void setStateType(final String stateType);

    /**
     * Return the value associated with the column: transition.
	 * @return A Set&lt;Transition&gt; object (this.transition)
	 */
	Set<Transition> getTransitions();
	
	/**
	 * Adds a bi-directional link of type Transition to the transitions set.
	 * @param transition item to add
	 */
	void addTransition(Transition transition);

  
    /**  
     * Set the value related to the column: transition.
	 * @param transition the transition value you wish to set
	 */
	void setTransitions(final Set<Transition> transition);

	// end of interface
}